
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  responsibleName: 'responsibleName',
  email: 'email',
  password_hash: 'password_hash',
  address: 'address',
  number: 'number',
  zip: 'zip',
  phone: 'phone',
  city: 'city'
};

exports.Prisma.PetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  about: 'about',
  age: 'age',
  requirement: 'requirement',
  organizationEmail: 'organizationEmail',
  energyLevel: 'energyLevel',
  size: 'size',
  city: 'city'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.Size = exports.$Enums.Size = {
  tiny: 'tiny',
  small: 'small',
  medium: 'medium',
  big: 'big'
};

exports.EnergyLevel = exports.$Enums.EnergyLevel = {
  very_low: 'very_low',
  low: 'low',
  average: 'average',
  high: 'high',
  very_high: 'very_high'
};

exports.City = exports.$Enums.City = {
  Acre: 'Acre',
  Alagoas: 'Alagoas',
  Amapá: 'Amapá',
  Amazonas: 'Amazonas',
  Bahia: 'Bahia',
  Ceará: 'Ceará',
  Distrito_Federal: 'Distrito_Federal',
  Espírito_Santo: 'Espírito_Santo',
  Goiás: 'Goiás',
  Maranhão: 'Maranhão',
  Mato_Grosso: 'Mato_Grosso',
  Mato_Grosso_do_Sul: 'Mato_Grosso_do_Sul',
  Minas_Gerais: 'Minas_Gerais',
  Pará: 'Pará',
  Paraíba: 'Paraíba',
  Paraná: 'Paraná',
  Pernambuco: 'Pernambuco',
  Piauí: 'Piauí',
  Rio_de_Janeiro: 'Rio_de_Janeiro',
  Rio_Grande_do_Norte: 'Rio_Grande_do_Norte',
  Rio_Grande_do_Sul: 'Rio_Grande_do_Sul',
  Rondônia: 'Rondônia',
  Roraima: 'Roraima',
  Santa_Catarina: 'Santa_Catarina',
  São_Paulo: 'São_Paulo',
  Sergipe: 'Sergipe',
  Tocantins: 'Tocantins'
};

exports.Prisma.ModelName = {
  Organization: 'Organization',
  Pet: 'Pet'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/leandrotune/www/find-a-friend/server/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/leandrotune/www/find-a-friend/server/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.8.2",
  "engineVersion": "2060c79ba17c6bb9f5823312b6f6b7f4a845738e",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Organization {\n  id              String @default(uuid())\n  responsibleName String\n  email           String @unique\n  password_hash   String\n  address         String\n  number          Int\n  zip             Float\n  phone           Int\n\n  city City\n  Pets Pet[]\n\n  @@map(\"organizations\")\n}\n\nmodel Pet {\n  id                String   @unique @default(uuid())\n  name              String\n  about             String\n  age               Int\n  requirement       String[]\n  organizationEmail String\n\n  energyLevel  EnergyLevel\n  size         Size\n  city         City\n  organization Organization @relation(fields: [organizationEmail], references: [email])\n\n  @@map(\"pets\")\n}\n\nenum Size {\n  tiny\n  small\n  medium\n  big\n}\n\nenum EnergyLevel {\n  very_low\n  low\n  average\n  high\n  very_high\n}\n\nenum City {\n  Acre\n  Alagoas\n  Amapá\n  Amazonas\n  Bahia\n  Ceará\n  Distrito_Federal\n  Espírito_Santo\n  Goiás\n  Maranhão\n  Mato_Grosso\n  Mato_Grosso_do_Sul\n  Minas_Gerais\n  Pará\n  Paraíba\n  Paraná\n  Pernambuco\n  Piauí\n  Rio_de_Janeiro\n  Rio_Grande_do_Norte\n  Rio_Grande_do_Sul\n  Rondônia\n  Roraima\n  Santa_Catarina\n  São_Paulo\n  Sergipe\n  Tocantins\n}\n",
  "inlineSchemaHash": "a54cbdcfff1ff9af506a53874677974b8a9b5dcd7a4e1f6def6f823b69b3bc1e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Organization\":{\"dbName\":\"organizations\",\"schema\":null,\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"String\",\"nativeType\":null,\"default\":{\"name\":\"uuid\",\"args\":[4]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"responsibleName\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"email\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":true,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"address\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"number\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"zip\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Float\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"phone\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"city\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"City\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"Pets\",\"kind\":\"object\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Pet\",\"nativeType\":null,\"relationName\":\"OrganizationToPet\",\"relationFromFields\":[],\"relationToFields\":[],\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"Pet\":{\"dbName\":\"pets\",\"schema\":null,\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":true,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"String\",\"nativeType\":null,\"default\":{\"name\":\"uuid\",\"args\":[4]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"name\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"about\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"age\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"requirement\",\"kind\":\"scalar\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"organizationEmail\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":true,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"energyLevel\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"EnergyLevel\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"size\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Size\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"city\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"City\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"organization\",\"kind\":\"object\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Organization\",\"nativeType\":null,\"relationName\":\"OrganizationToPet\",\"relationFromFields\":[\"organizationEmail\"],\"relationToFields\":[\"email\"],\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false}},\"enums\":{\"Size\":{\"values\":[{\"name\":\"tiny\",\"dbName\":null},{\"name\":\"small\",\"dbName\":null},{\"name\":\"medium\",\"dbName\":null},{\"name\":\"big\",\"dbName\":null}],\"dbName\":null},\"EnergyLevel\":{\"values\":[{\"name\":\"very_low\",\"dbName\":null},{\"name\":\"low\",\"dbName\":null},{\"name\":\"average\",\"dbName\":null},{\"name\":\"high\",\"dbName\":null},{\"name\":\"very_high\",\"dbName\":null}],\"dbName\":null},\"City\":{\"values\":[{\"name\":\"Acre\",\"dbName\":null},{\"name\":\"Alagoas\",\"dbName\":null},{\"name\":\"Amapá\",\"dbName\":null},{\"name\":\"Amazonas\",\"dbName\":null},{\"name\":\"Bahia\",\"dbName\":null},{\"name\":\"Ceará\",\"dbName\":null},{\"name\":\"Distrito_Federal\",\"dbName\":null},{\"name\":\"Espírito_Santo\",\"dbName\":null},{\"name\":\"Goiás\",\"dbName\":null},{\"name\":\"Maranhão\",\"dbName\":null},{\"name\":\"Mato_Grosso\",\"dbName\":null},{\"name\":\"Mato_Grosso_do_Sul\",\"dbName\":null},{\"name\":\"Minas_Gerais\",\"dbName\":null},{\"name\":\"Pará\",\"dbName\":null},{\"name\":\"Paraíba\",\"dbName\":null},{\"name\":\"Paraná\",\"dbName\":null},{\"name\":\"Pernambuco\",\"dbName\":null},{\"name\":\"Piauí\",\"dbName\":null},{\"name\":\"Rio_de_Janeiro\",\"dbName\":null},{\"name\":\"Rio_Grande_do_Norte\",\"dbName\":null},{\"name\":\"Rio_Grande_do_Sul\",\"dbName\":null},{\"name\":\"Rondônia\",\"dbName\":null},{\"name\":\"Roraima\",\"dbName\":null},{\"name\":\"Santa_Catarina\",\"dbName\":null},{\"name\":\"São_Paulo\",\"dbName\":null},{\"name\":\"Sergipe\",\"dbName\":null},{\"name\":\"Tocantins\",\"dbName\":null}],\"dbName\":null}},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

